	.file	"test.c"
	.section	.rodata
.LC0:
	.string	"10 = %d\n"
.LC1:
	.string	"12 + 6 = %d\n"
.LC2:
	.string	"12 - 6 = %d\n"
.LC3:
	.string	"12 * 6 = %d\n"
.LC4:
	.string	"12 / 6 = %d\n"
.LC5:
	.string	"12 %% 5 = %d\n"
.LC6:
	.string	"12 << 1 = %d\n"
.LC7:
	.string	"12 >> 1 = %d\n"
	.text
	.globl	main
	.type	main, @function
main:
.LFB2:
	.cfi_startproc
	leal	4(%esp), %ecx
	.cfi_def_cfa 1, 0
	andl	$-16, %esp
	pushl	-4(%ecx)
	pushl	%ebp
	.cfi_escape 0x10,0x5,0x2,0x75,0
	movl	%esp, %ebp
	pushl	%ecx
	.cfi_escape 0xf,0x3,0x75,0x7c,0x6
	subl	$4, %esp
	call	tstconst
	subl	$8, %esp
	pushl	%eax
	pushl	$.LC0
	call	printf
	addl	$16, %esp
	subl	$8, %esp
	pushl	$6
	pushl	$12
	call	tstadd
	addl	$16, %esp
	subl	$8, %esp
	pushl	%eax
	pushl	$.LC1
	call	printf
	addl	$16, %esp
	subl	$8, %esp
	pushl	$6
	pushl	$12
	call	tstsub
	addl	$16, %esp
	subl	$8, %esp
	pushl	%eax
	pushl	$.LC2
	call	printf
	addl	$16, %esp
	subl	$8, %esp
	pushl	$6
	pushl	$12
	call	tstmul
	addl	$16, %esp
	subl	$8, %esp
	pushl	%eax
	pushl	$.LC3
	call	printf
	addl	$16, %esp
	subl	$8, %esp
	pushl	$6
	pushl	$12
	call	tstdiv
	addl	$16, %esp
	subl	$8, %esp
	pushl	%eax
	pushl	$.LC4
	call	printf
	addl	$16, %esp
	subl	$8, %esp
	pushl	$5
	pushl	$12
	call	tstmod
	addl	$16, %esp
	subl	$8, %esp
	pushl	%eax
	pushl	$.LC5
	call	printf
	addl	$16, %esp
	subl	$8, %esp
	pushl	$1
	pushl	$12
	call	tstshl
	addl	$16, %esp
	subl	$8, %esp
	pushl	%eax
	pushl	$.LC6
	call	printf
	addl	$16, %esp
	subl	$8, %esp
	pushl	$1
	pushl	$12
	call	tstshr
	addl	$16, %esp
	subl	$8, %esp
	pushl	%eax
	pushl	$.LC7
	call	printf
	addl	$16, %esp
	movl	$0, %eax
	movl	-4(%ebp), %ecx
	.cfi_def_cfa 1, 0
	leave
	.cfi_restore 5
	leal	-4(%ecx), %esp
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE2:
	.size	main, .-main
	.ident	"GCC: (GNU) 5.1.1 20150618 (Red Hat 5.1.1-4)"
	.section	.note.GNU-stack,"",@progbits
